{
  "name": "legends_of_runeterra_twitch_win_tracker",
  "version": "0.3.1",
  "main": "electron-server.js",
  "license": "MIT",
  "dependencies": {
    "axios": "^0.19.2",
    "body-parser": "^1.19.0",
    "cors": "^2.8.5",
    "electron-is-dev": "^1.2.0",
    "electron-log": "^4.2.0",
    "electron-store": "^5.1.1",
    "electron-updater": "^4.3.1",
    "express": "^4.17.1",
    "jsonwebtoken": "^8.5.1",
    "uuid": "^8.0.0"
  },
  "author": {
    "name": "Danny North",
    "email": "runeterra.history.tracker@gmail.com"
  },
  "description": "Legends of Runeterra history tracker",
  "respository": "https://github.com/dnorth/legends_of_runeterra_win_tracker_twitch_extension",
  "build": {
    "appId": "com.electron.runeterraHistoryTracker",
    "productName": "Runeterra History Tracker",
    "artifactName": "${productName} Installer (${os} latest).${ext}",
    "win": {
      "target": "NSIS"
    },
    "directories": {
      "buildResources": "./buildResources",
      "output": "./Electron Builds"
    },
    "files": [
      "!**/secrets.js",
      "!**/aws-lambda",
      "!**/dynamodb"
    ],
    "publish": {
      "provider": "s3",
      "bucket": "runeterra.history.tracker",
      "region": "us-east-2",
      "path": "server/Electron Builds"
    }
  },
  "scripts": {
    "start": "concurrently \"npm run server\" \"npm run dynamoDb\" ",
    "start-no-db": "npm run server",
    "start-prod": "SET NODE_ENV=production && npm run start-no-db",
    "start-electron-prod": "SET NODE_ENV=production && npm run electron",
    "server": "node server.js",
    "electron": "concurrently \"npm run electron-no-db\" \"npm run dynamoDb\" ",
    "electron-no-db": "electron electron-server.js",
    "dynamoDb": "cd dynamodb && java -Djava.library.path=./DynamoDBLocal_lib -jar DynamoDBLocal.jar -sharedDb",
    "deploy-history-lambda": "cd aws-lambda/functions && serverless deploy",
    "invoke-get-history-lambda-prod": "cd aws-lambda/functions && serverless invoke -f getLoRHistoryByChannelId --path getLoRHistory_local_request_data.json",
    "invoke-get-history-lambda": "cd aws-lambda/functions && serverless invoke local -f getLoRHistoryByChannelId --path getLoRHistory_local_request_data.json",
    "invoke-post-history-lambda-prod": "cd aws-lambda/functions && serverless invoke -f updateLoRHistory --path updateLoRHistory_local_request_data.json",
    "invoke-post-history-lambda": "cd aws-lambda/functions && serverless invoke local -f updateLoRHistory --path updateLoRHistory_local_request_data.json",
    "invoke-post-history-lambda-playerName-prod": "cd aws-lambda/functions && serverless invoke -f updateLoRHistory --path updateLoRHistory_playerName_local_request_data.json",
    "invoke-post-history-lambda-playerName": "cd aws-lambda/functions && serverless invoke local -f updateLoRHistory --path updateLoRHistory_playerName_local_request_data.json",
    "invoke-auth-twitch-user-lambda-prod": "cd aws-lambda/functions && serverless invoke -f authenticateTwitchUser --path authenticateTwitchUser_local_request_data.json",
    "invoke-auth-twitch-user-lambda": "cd aws-lambda/functions && serverless invoke local -f authenticateTwitchUser --path authenticateTwitchUser_local_request_data.json",
    "build": "electron-builder",
    "publish": "electron-builder --publish always",
    "postinstall": "electron-builder install-app-deps"
  },
  "devDependencies": {
    "aws-sdk": "^2.682.0",
    "concurrently": "^5.2.0",
    "electron": "^9.4.0",
    "electron-builder": "^22.6.1"
  }
}
